{"version":3,"sources":["assets/countries.geojson","Components/styles.js","data.js","Components/Map.js","assets/github-brands.svg","App.js","githubData.js","serviceWorker.js","main.js","index.js"],"names":["module","exports","styleForCountry","Style","fill","Fill","color","stroke","Stroke","width","text","Text","font","styleForPoint","image","Circle","radius","styleForHighlight","styleForDiseased","clone","setFill","map","coordinates","Array","countryLayerSource","VectorSource","url","CountryGeoJson","format","GeoJSON","countryLayer","VectorLayer","source","style","feature","getText","setText","get","dataSource","dataLayer","tileLayer","TileLayer","OSM","on","e","start","Date","getTime","listenerKey","event","vectorContext","getVectorContext","frameState","flashGeom","getGeometry","elapsed","time","elapsedRatio","easeOut","opacity","styleForFlash","setStyle","drawGeometry","unByKey","render","flash","MapObject","useEffect","Papa","parse","HEROKU_CORS_PROXY_URL","header","skipEmptyLines","download","dynamicTyping","step","row","push","x","data","y","complete","results","slice","length","filter","elem","Map","target","layers","view","View","center","zoom","maxZoom","interactions","defaultInteractions","extend","DragRotateAndZoom","highlight","featureOverlay","displayFeatureInfo","pixel","forEachFeatureAtPixel","info","document","getElementById","innerHTML","getId","getSource","removeFeature","addFeature","evt","dragging","getEventPixel","originalEvent","SetMap","activatedLayer","forEachFeature","SetDiseasedCountries","forEach","geom","Point","fromLonLat","Feature","AddCoordinateFeatures","id","className","_extends","Object","assign","i","arguments","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","d","_ref","svgRef","title","props","focusable","role","viewBox","ref","ForwardRef","forwardRef","initialValueCountByMonth","value","months","App","useState","totalRepo","setTotalRepo","countByMonths","setCountByMonths","axios","then","res","total_count","response","urls","requests","all","spread","responses","catch","err","console","log","getRepoCounts","temp","fetchedCountByMonth","val","index","countByMonth","rel","href","Boolean","window","location","hostname","match","append","country_name","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.843cc6c3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/countries.ab583aa1.geojson\";","import { Fill, Stroke, Style, Text, Circle } from \"ol/style\";\r\n\r\nconst styleForCountry = new Style({\r\n  fill: new Fill({\r\n    // color: \"rgba(255, 255, 255, 0.25)\",\r\n    color: \"rgba(255, 255, 255, 0.25)\",\r\n  }),\r\n  stroke: new Stroke({\r\n    // color: \"#319FD3\",\r\n    color: \"#319FD3\",\r\n    width: 1,\r\n  }),\r\n  text: new Text({\r\n    font: \"12px Calibri,sans-serif\",\r\n    fill: new Fill({\r\n      color: \"green\",\r\n    }),\r\n  }),\r\n});\r\n\r\nconst styleForPoint = new Style({\r\n  image: new Circle({\r\n    radius: 10,\r\n    fill: new Fill({ color: \"rgba(255, 0, 0, 0.4)\" }),\r\n  }),\r\n});\r\n\r\nconst styleForHighlight = new Style({\r\n  stroke: new Stroke({\r\n    color: \"green\",\r\n    width: 1,\r\n  }),\r\n  fill: new Fill({\r\n    color: \"rgba(255,255,0,0.1)\",\r\n  }),\r\n  text: new Text({\r\n    font: \"12px Calibri,sans-serif\",\r\n    fill: new Fill({\r\n      color: \"green\",\r\n    }),\r\n  }),\r\n});\r\n\r\nconst styleForDiseased = styleForCountry.clone();\r\nstyleForDiseased.setFill(\r\n  new Fill({\r\n    // color: \"rgba(255, 255, 255, 0.25)\",\r\n    color: \"rgba(0, 0, 0, 0.25)\",\r\n  })\r\n);\r\n\r\nexport { styleForCountry, styleForPoint, styleForHighlight, styleForDiseased };\r\n","// use raw data from CSSEGISandData repository on github\r\n// https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv\r\n\r\n// Data Format\r\n// Provience/State  Country/Region  Lat Long    1/22/20 1/23/20 .... 4/7/20 ... today\r\nconst stateIndex = 0;\r\nconst countryIndex = 1;\r\nconst latitudeIndex = 2;\r\nconst longitudeIndex = 3;\r\n// 4, 5, 6 ... and so on --> result day by day start from 1/22/2020\r\n\r\n// TO prevent cors issue\r\nconst HEROKU_CORS_PROXY_URL = \"https://cors-anywhere.herokuapp.com\";\r\nconst rawDataSource =\r\n  \"https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv\";\r\n\r\nconst GET_URL = HEROKU_CORS_PROXY_URL + \"/\" + rawDataSource;\r\n\r\n// Plain way to deal with csv\r\n// Do not use this way. Use PAPAPARSE!\r\n\r\n// import axios from \"axios\";\r\n\r\n// Variable Definitions\r\n// var raw, countries, coordinates;\r\n\r\n// axios.get(GET_URL).then((res) => {\r\n//   raw = res.data.split(\"\\n\");\r\n//   raw.forEach(function (elem, i) {\r\n//     this[i] = elem.split(\",\");\r\n//   }, raw);\r\n\r\n//   // get rid of first line since it is header-column\r\n//   raw = raw.slice(1, raw.length);\r\n\r\n//   // seperate meaningful data\r\n//   seperateCountries();\r\n//   seperateCoordinates();\r\n//   // console.log(raw.filter((elem) => elem[countryIndex] === \"Turkey\"));\r\n// });\r\n\r\n// const seperateCountries = () => {\r\n//   countries = Array.from(raw, (r) => r[countryIndex]);\r\n//   // console.log(countries);\r\n// };\r\n\r\n// const seperateCoordinates = () => {\r\n//   coordinates = Array.from(raw, (r) => ({\r\n//     x: parseInt(r[longitudeIndex]) || 0,\r\n//     y: parseInt(r[latitudeIndex]) || 0,\r\n//   }));\r\n//   // console.log(coordinates);\r\n// };\r\n\r\n// const getCoordinates = () => {\r\n//   return coordinates;\r\n// };\r\n\r\n// export { getCoordinates };\r\n\r\nexport { GET_URL, latitudeIndex, longitudeIndex, countryIndex };\r\n","import React, { useEffect, useCallback } from \"react\";\r\nimport \"ol/ol.css\";\r\nimport Map from \"ol/Map\";\r\nimport View from \"ol/View\";\r\nimport {\r\n  defaults as defaultInteractions,\r\n  DragRotateAndZoom,\r\n} from \"ol/interaction\";\r\nimport TileLayer from \"ol/layer/Tile\";\r\nimport OSM from \"ol/source/OSM\";\r\nimport GeoJSON from \"ol/format/GeoJSON\";\r\nimport VectorLayer from \"ol/layer/Vector\";\r\nimport VectorSource from \"ol/source/Vector\";\r\nimport { Stroke, Style, Circle } from \"ol/style\";\r\nimport Feature from \"ol/Feature\";\r\nimport Point from \"ol/geom/Point\";\r\nimport { fromLonLat } from \"ol/proj\";\r\nimport CountryGeoJson from \"../assets/countries.geojson\";\r\nimport { getVectorContext } from \"ol/render\";\r\nimport { easeOut } from \"ol/easing\";\r\nimport { unByKey } from \"ol/Observable\";\r\n\r\nimport {\r\n  styleForCountry,\r\n  styleForPoint,\r\n  styleForHighlight,\r\n  styleForDiseased,\r\n} from \"./styles\";\r\n\r\nimport { GET_URL, latitudeIndex, longitudeIndex } from \"../data\";\r\nimport Papa from \"papaparse\";\r\n\r\n// This should be defined out of SetMap function. Otherwise every time component renders, it will create mapObj again and a new map will be created too.\r\n// So define it in here and handle null check before map creation.\r\nvar map = null;\r\nvar coordinates = new Array();\r\nvar countryLayerSource = new VectorSource({\r\n  url: CountryGeoJson,\r\n  format: new GeoJSON(),\r\n});\r\nvar countryLayer = new VectorLayer({\r\n  source: countryLayerSource,\r\n  style: function (feature) {\r\n    styleForCountry.getText().setText(feature.get(\"name\"));\r\n    return styleForCountry;\r\n  },\r\n});\r\nvar dataSource = new VectorSource({});\r\n\r\nvar dataLayer = new VectorLayer({\r\n  source: dataSource,\r\n});\r\n\r\nvar tileLayer = new TileLayer({\r\n  source: new OSM(),\r\n});\r\n\r\nvar duration = 3000;\r\nfunction flash(feature) {\r\n  var start = new Date().getTime();\r\n  var listenerKey = tileLayer.on(\"postrender\", animate);\r\n\r\n  function animate(event) {\r\n    var vectorContext = getVectorContext(event);\r\n    var frameState = event.frameState;\r\n    var flashGeom = feature.getGeometry().clone();\r\n    var elapsed = frameState.time - start;\r\n    var elapsedRatio = elapsed / duration;\r\n    // radius will be 5 at start and 30 at end.\r\n    var radius = easeOut(elapsedRatio) * 25 + 5;\r\n    var opacity = easeOut(1 - elapsedRatio);\r\n\r\n    var styleForFlash = new Style({\r\n      image: new Circle({\r\n        radius: radius,\r\n        stroke: new Stroke({\r\n          color: \"rgba(255, 0, 0, \" + opacity + \")\",\r\n          width: 0.25 + opacity,\r\n        }),\r\n      }),\r\n    });\r\n\r\n    vectorContext.setStyle(styleForFlash);\r\n    vectorContext.drawGeometry(flashGeom);\r\n    if (elapsed > duration) {\r\n      unByKey(listenerKey);\r\n      return;\r\n    }\r\n    // tell OpenLayers to continue postrender animation\r\n    map.render();\r\n  }\r\n}\r\n\r\ndataSource.on(\"addfeature\", function (e) {\r\n  flash(e.feature);\r\n});\r\n\r\nfunction SetMap() {\r\n  if (map === null) {\r\n    map = new Map({\r\n      target: \"map\",\r\n      layers: [tileLayer, countryLayer, dataLayer],\r\n      view: new View({\r\n        center: [0, 0],\r\n        zoom: 0,\r\n        maxZoom: 6,\r\n      }),\r\n      interactions: defaultInteractions().extend([new DragRotateAndZoom()]),\r\n    });\r\n  }\r\n\r\n  var featureOverlay = new VectorLayer({\r\n    source: new VectorSource(),\r\n    map: map,\r\n    style: function (feature) {\r\n      styleForHighlight.getText().setText(feature.get(\"name\"));\r\n      return styleForHighlight;\r\n    },\r\n  });\r\n\r\n  var highlight;\r\n  var displayFeatureInfo = function (pixel) {\r\n    var feature = map.forEachFeatureAtPixel(pixel, function (feature) {\r\n      return feature;\r\n    });\r\n\r\n    var info = document.getElementById(\"info\");\r\n    if (feature) {\r\n      info.innerHTML = feature.getId() + \": \" + feature.get(\"name\");\r\n    } else {\r\n      info.innerHTML = \"&nbsp;\";\r\n    }\r\n\r\n    if (feature !== highlight) {\r\n      if (highlight) {\r\n        featureOverlay.getSource().removeFeature(highlight);\r\n      }\r\n      if (feature) {\r\n        featureOverlay.getSource().addFeature(feature);\r\n      }\r\n      highlight = feature;\r\n    }\r\n  };\r\n\r\n  map.on(\"pointermove\", function (evt) {\r\n    if (evt.dragging) {\r\n      return;\r\n    }\r\n    var pixel = map.getEventPixel(evt.originalEvent);\r\n    displayFeatureInfo(pixel);\r\n  });\r\n\r\n  map.on(\"click\", function (evt) {\r\n    displayFeatureInfo(evt.pixel);\r\n  });\r\n}\r\n\r\nfunction SetDiseasedCountries() {\r\n  // Change color of diseased countries\r\n  var activatedLayer = new VectorLayer({\r\n    source: new VectorSource(),\r\n    map: map,\r\n    style: function (feature) {\r\n      return styleForDiseased;\r\n    },\r\n  });\r\n\r\n  countryLayer.getSource().forEachFeature(function (feature) {\r\n    if (feature.get(\"name\") === \"Turkey\") {\r\n      activatedLayer.getSource().addFeature(feature);\r\n    }\r\n\r\n    if (feature.get(\"name\") === \"Russia\") {\r\n      activatedLayer.getSource().addFeature(feature);\r\n    }\r\n  });\r\n}\r\n\r\nfunction AddCoordinateFeatures(x, y) {\r\n  // var geom = new Point(fromLonLat([coordinates[index].x, locations[index].y]));\r\n  var geom = new Point(fromLonLat([x, y]));\r\n  var feature = new Feature(geom);\r\n  feature.setStyle(styleForPoint);\r\n  dataSource.addFeature(feature);\r\n}\r\n\r\nfunction MapObject() {\r\n  // to run function only once give [] as second parameter\r\n\r\n  useEffect(() => {\r\n    Papa.parse(GET_URL, {\r\n      header: false,\r\n      skipEmptyLines: true,\r\n      download: true,\r\n      dynamicTyping: true, //ensures that numbers not turned to strings\r\n      step: function (row) {\r\n        coordinates.push({\r\n          x: row.data[longitudeIndex] || 0,\r\n          y: row.data[latitudeIndex] || 0,\r\n        });\r\n      },\r\n      complete: function (results) {\r\n        // SOME DATA CLEAN-UP\r\n        // get rid of first line since it is header-column\r\n        coordinates = coordinates.slice(1, coordinates.length);\r\n\r\n        // filter empty coordinates\r\n        coordinates = coordinates.filter((elem) => {\r\n          return elem.x !== 0 && elem.y !== 0;\r\n        });\r\n\r\n        // console.log(coordinates);\r\n        SetMap();\r\n        SetDiseasedCountries();\r\n        coordinates.forEach((elem) => {\r\n          AddCoordinateFeatures(elem.x, elem.y);\r\n        });\r\n      },\r\n    });\r\n  }, []);\r\n\r\n  return <div id=\"map\" className=\"h-100\"></div>;\r\n}\r\n\r\nexport default MapObject;\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"currentColor\",\n  d: \"M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2 2.3zm44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z\"\n});\n\nvar SvgGithubBrands = function SvgGithubBrands(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    focusable: \"false\",\n    \"data-prefix\": \"fab\",\n    \"data-icon\": \"github\",\n    className: \"svg-inline--fa fa-github fa-w-16\",\n    role: \"img\",\n    viewBox: \"0 0 496 512\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgGithubBrands, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/github-brands.ec5bc1b3.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./App.scss\";\n\n// get map component\nimport Map from \"./Components/Map\";\n\n// get exported javascript functions\nimport { getTotalRepoCount, getRepoCounts } from \"./githubData.js\";\n\n// import github icon\nimport { ReactComponent as GithubLogo } from \"./assets/github-brands.svg\";\n\nconst initialValueCountByMonth = [{ id: 0, value: 0 }];\nconst months = [\"January\", \"February\", \"March\", \"April\"];\n\nfunction App() {\n  const [totalRepo, setTotalRepo] = useState(0);\n  const [countByMonths, setCountByMonths] = useState(initialValueCountByMonth);\n\n  useEffect(() => {\n    getTotalRepoCount().then((response) => setTotalRepo(response));\n\n    getRepoCounts()\n      .then(\n        axios.spread((...res) => {\n          var [...temp] = [...res];\n          const fetchedCountByMonth = temp.map((val, index) => {\n            return { id: index, value: val.data.total_count };\n          });\n          setCountByMonths(fetchedCountByMonth);\n        })\n      )\n      .catch((err) => {\n        console.log(\"error on getRepoCounts(): \" + err);\n      });\n  }, []);\n\n  return (\n    <div className=\"content\">\n      <div className=\"col-xl-8 col-lg-10 col-md-12 col-sm-12 h-100\">\n        <div className=\"d-flex flex-column w-100 h-100\">\n          <div>\n            <div className=\"header-content d-flex justify-content-center\">\n              <div className=\"title mb-5\">COVID Disease Tracker by Country</div>\n            </div>\n            <div className=\"d-flex\">\n              <div className=\"total-repo-count\">\n                Total number of COVID related repositories on Github:{\" \"}\n                {totalRepo}\n              </div>\n              <div className=\"ml-auto\" id=\"info\"></div>\n            </div>\n          </div>\n          <div className=\"w-100 h-50\">\n            <Map></Map>\n          </div>\n          <div className=\"d-flex flex-column flex-grow-1\">\n            {countByMonths.map((countByMonth, index) => (\n              <div key={countByMonth.id}>\n                Repo Counts on {months[index]}: {countByMonth.value}\n              </div>\n            ))}\n            <div id=\"location\">Location: </div>\n          </div>\n          <div className=\"logo text-center h2 pb-3\">\n            <a\n              className=\"h-100\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href=\"https://github.com/Ardahan-Kisbet/COVID-19\"\n            >\n              <GithubLogo className=\"svg h-100\"></GithubLogo>\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import axios from \"axios\";\r\n\r\nexport const getTotalRepoCount = () => {\r\n  return axios\r\n    .get(\r\n      \"https://api.github.com/search/repositories?q=covid OR coronavirus in:name,description+created:>2020-01-01\"\r\n    )\r\n    .then((res) => {\r\n      return res.data.total_count;\r\n    });\r\n};\r\n\r\nexport const getRepoCounts = () => {\r\n  const urls = [\r\n    \"https://api.github.com/search/repositories?q=covid OR coronavirus in:name,description+created:2020-01-01..2020-01-31\",\r\n    \"https://api.github.com/search/repositories?q=covid OR coronavirus in:name,description+created:2020-02-01..2020-02-29\",\r\n    \"https://api.github.com/search/repositories?q=covid OR coronavirus in:name,description+created:2020-03-01..2020-03-31\",\r\n    \"https://api.github.com/search/repositories?q=covid OR coronavirus in:name,description+created:2020-04-01..*\",\r\n  ];\r\n\r\n  const requests = [\r\n    axios.get(urls[0]),\r\n    axios.get(urls[1]),\r\n    axios.get(urls[2]),\r\n    axios.get(urls[3]),\r\n  ];\r\n\r\n  return axios\r\n    .all([requests[0], requests[1], requests[2], requests[3]])\r\n    .then(\r\n      axios.spread((...responses) => {\r\n        return responses;\r\n        // const res1 = responses[0];\r\n        // console.log(\"res1 \", res1);\r\n      })\r\n    )\r\n    .catch((err) => {\r\n      console.log(\"error on axios.all --> \" + err);\r\n    });\r\n};\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import axios from \"axios\";\r\n\r\naxios.get(\"https://ipapi.co/json/\").then((res) => {\r\n  document.getElementById(\"location\").append(res.data.country_name);\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./main.js\";\nimport \"./data.js\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}