{"version":3,"sources":["assets/countries.geojson","assets/rawDataBackup.csv","Components/styles.js","data.js","Components/Map.js","Components/Chart.js","Components/Github.js","githubData.js","assets/github-brands.svg","App.js","serviceWorker.js","main.js","index.js"],"names":["module","exports","styleForCountry","Style","fill","Fill","color","stroke","Stroke","width","text","Text","font","styleForPoint","image","Circle","radius","styleForHighlight","styleForDiseased","clone","setFill","rawDataBackup","require","rawData","GetCountryStateData","a","Promise","resolve","Papa","parse","HEROKU_CORS_PROXY_URL","header","skipEmptyLines","download","dynamicTyping","complete","res","error","err","then","raw","months","totalCol","data","length","i","currMonth","Date","getMonth","isExist","findIndex","x","month","push","daysCount","slice","coordinates","forEach","row","caseByMonth","m","count","days","totalCase","reduce","sum","elem","countryName","stateName","detailedCase","y","filter","map","countryLayerSource","VectorSource","url","CountryGeoJson","format","GeoJSON","countryLayer","VectorLayer","name","source","style","feature","getText","setText","get","dataSource","dataLayer","zIndex","tileLayer","TileLayer","OSM","diseasedCountryLayerSource","diseasedCountryLayer","SetMap","Map","target","layers","view","View","center","zoom","maxZoom","interactions","defaultInteractions","extend","DragRotateAndZoom","highlightCountry","highlightData","featureOverlayCountry","featureOverlayData","displayFeatureInfo","pixel","info","document","getElementById","forEachFeatureAtPixel","layer","innerHTML","getId","getSource","removeFeature","addFeature","console","log","on","evt","dragging","getEventPixel","originalEvent","getView","getZoom","newRadius","Math","pow","abs","getImage","setRadius","forEachFeature","setStyle","AddCoordinateFeatures","geom","Point","fromLonLat","Feature","e","start","getTime","listenerKey","event","vectorContext","getVectorContext","frameState","flashGeom","getGeometry","elapsed","time","elapsedRatio","easeOut","opacity","styleForFlash","drawGeometry","unByKey","render","flash","MapObject","catch","useEffect","FetchData","id","className","ctx","active","find","labels","monthsReference","getContext","Chart","type","datasets","label","backgroundColor","borderColor","options","responsive","maintainAspectRatio","ChartCanvas","initialValueCountByMonth","value","Github","useCookies","cookies","setCookie","removeCookie","useState","totalRepo","setTotalRepo","countByMonths","setCountByMonths","totalRepoCount","axios","total_count","response","JSON","stringify","path","maxAge","monthlyRepoCount","monthlyData","urls","requests","all","spread","responses","getRepoCounts","temp","fetchedCountByMonth","val","index","cookieObject","height","countByMonth","key","_extends","Object","assign","arguments","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","d","_ref","svgRef","title","props","focusable","role","viewBox","ref","ForwardRef","forwardRef","App","rel","href","Boolean","window","location","hostname","match","append","country_name","ReactDOM","StrictMode","CookiesProvider","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.64fcc9a1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/countries.ab583aa1.geojson\";","module.exports = __webpack_public_path__ + \"static/media/rawDataBackup.ba45d2a8.csv\";","import { Fill, Stroke, Style, Text, Circle } from \"ol/style\";\r\n\r\nconst initRadius = 3;\r\n\r\nconst styleForCountry = new Style({\r\n  fill: new Fill({\r\n    // color: \"rgba(255, 255, 255, 0.25)\",\r\n    color: \"rgba(255, 255, 255, 0.25)\",\r\n  }),\r\n  stroke: new Stroke({\r\n    // color: \"#319FD3\",\r\n    color: \"#319FD3\",\r\n    width: 1,\r\n  }),\r\n  text: new Text({\r\n    font: \"12px Calibri,sans-serif\",\r\n    fill: new Fill({\r\n      color: \"green\",\r\n    }),\r\n  }),\r\n});\r\n\r\nconst styleForPoint = new Style({\r\n  image: new Circle({\r\n    radius: initRadius,\r\n    fill: new Fill({ color: \"rgba(255, 0, 0, 0.4)\" }),\r\n  }),\r\n});\r\n\r\nconst styleForHighlight = new Style({\r\n  stroke: new Stroke({\r\n    color: \"green\",\r\n    width: 1,\r\n  }),\r\n  fill: new Fill({\r\n    color: \"rgba(255,255,0,0.1)\",\r\n  }),\r\n  text: new Text({\r\n    font: \"12px Calibri,sans-serif\",\r\n    fill: new Fill({\r\n      color: \"green\",\r\n    }),\r\n  }),\r\n});\r\n\r\nconst styleForDiseased = styleForCountry.clone();\r\nstyleForDiseased.setFill(\r\n  new Fill({\r\n    // color: \"rgba(255, 255, 255, 0.75)\",\r\n    color: \"rgba(0, 0, 0, 0.25)\",\r\n  })\r\n);\r\n\r\nexport {\r\n  styleForCountry,\r\n  styleForPoint,\r\n  styleForHighlight,\r\n  styleForDiseased,\r\n  initRadius,\r\n};\r\n","import Papa from \"papaparse\";\r\n\r\n// use raw data from CSSEGISandData repository on github\r\n// https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv\r\n\r\n// Data Format\r\n// Provience/State  Country/Region  Lat Long    1/22/20 1/23/20 .... 4/7/20 ... today\r\nconst stateIndex = 0;\r\nconst countryIndex = 1;\r\nconst latitudeIndex = 2;\r\nconst longitudeIndex = 3;\r\nconst dataStartIndex = 4;\r\n// 4, 5, 6 ... and so on --> result day by day start from 1/22/2020\r\n\r\n// TO prevent cors issue use public heroku proxy\r\nconst HEROKU_CORS_PROXY_URL = \"https://cors-anywhere.herokuapp.com\";\r\nconst rawDataSource =\r\n  \"https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv\";\r\n\r\nconst GET_URL = HEROKU_CORS_PROXY_URL + \"/\" + rawDataSource;\r\n\r\nconst rawDataBackup = require(\"./assets/rawDataBackup.csv\");\r\n\r\n/**\r\n * raw data variable will be used to prevent repetitive request to\r\n * original github repository. Fetch it once and use it!\r\n */\r\nlet rawData = null;\r\n\r\n/**\r\n * This function is used for preparing raw data either from original\r\n * CSSEGISandData github repository or local backup file rawDataBackup.csv\r\n * All possible conditions are handled in this function to prevent application crashes.\r\n */\r\nconst GetRawData = () => {\r\n  return new Promise((resolve) => {\r\n    if (rawData === null) {\r\n      // If rawData is null then we haven't request to original data yet.\r\n      // proceed with data request\r\n      Papa.parse(GET_URL, {\r\n        header: false,\r\n        skipEmptyLines: true,\r\n        download: true,\r\n        dynamicTyping: true, //ensures that numbers not turned to strings\r\n        complete: (res) => {\r\n          // Fetch at once. Store it to rawData to use it later!\r\n          rawData = res;\r\n          resolve(rawData);\r\n        },\r\n        error: (err) => {\r\n          // If we can not fetch live data from given url try to load\r\n          // backup data from assets/rawDataBackup.csv\r\n          Papa.parse(rawDataBackup, {\r\n            header: false,\r\n            skipEmptyLines: true,\r\n            download: true,\r\n            dynamicTyping: true, //ensures that numbers not turned to strings\r\n            complete: (res) => {\r\n              // Backup data successfully loaded. Store it to rawData to use it later!\r\n              rawData = res;\r\n              resolve(rawData);\r\n            },\r\n            error: (err) => {\r\n              // this block of code should not be executed at all if backup\r\n              // data is not corrupted - Defensive\r\n              rawData = null;\r\n              resolve(rawData);\r\n            },\r\n          });\r\n        },\r\n      });\r\n    } else {\r\n      // If rawData is not null then we already have got our data, return it.\r\n      resolve(rawData);\r\n    }\r\n  });\r\n};\r\n\r\n/**\r\n * This function is used for getting all the coordinates from raw data which is\r\n * fetched by using GetRawData() alongside total case count and seperated\r\n * country/state knowledge.\r\n * This method is exported to use in components such as Map and Chart component\r\n */\r\nconst GetCountryStateData = async function () {\r\n  return new Promise((resolve) => {\r\n    GetRawData().then((raw) => {\r\n      let months = [];\r\n      let totalCol = raw.data[0].length;\r\n      for (let i = dataStartIndex; i < totalCol; ++i) {\r\n        let currMonth = new Date(raw.data[0][i]).getMonth();\r\n        let isExist = months.findIndex((x) => x.month === currMonth);\r\n        if (isExist === -1) {\r\n          // if we encounter with new month then add it to month array\r\n          // by giving day count as 1\r\n          months.push({ month: currMonth, daysCount: 1 });\r\n        } else {\r\n          // if already exist in month array just increase day count by 1\r\n          months[isExist].daysCount++;\r\n        }\r\n      }\r\n      // now we have our month/day array as ready to be used disease counting\r\n\r\n      // get rid of first line since it is header-column\r\n      raw.data = raw.data.slice(1, raw.data.length);\r\n\r\n      let coordinates = [];\r\n      raw.data.forEach((row) => {\r\n        let caseByMonth = [];\r\n        let i = dataStartIndex;\r\n        months.forEach((m) => {\r\n          let count = 0;\r\n          // for (let j = i; j < i + m.daysCount; ++j) {\r\n          //   count += row[j];\r\n          // }\r\n          // this is the total case count at the end of the each month\r\n          count = row[i + m.daysCount - 1];\r\n\r\n          // now we have our monthly disease count here\r\n          caseByMonth.push({ month: m.month, days: m.daysCount, count: count });\r\n\r\n          // set next iteration index which will be used in for loop j element\r\n          i += m.daysCount;\r\n        });\r\n\r\n        let totalCase = caseByMonth.reduce((sum, elem) => sum + elem.count, 0);\r\n\r\n        coordinates.push({\r\n          countryName: row[countryIndex] || \"Undefined\",\r\n          stateName: row[stateIndex] || null,\r\n          totalCase: totalCase,\r\n          detailedCase: caseByMonth,\r\n          x: row[longitudeIndex] || 0,\r\n          y: row[latitudeIndex] || 0,\r\n        });\r\n      });\r\n\r\n      // filter empty coordinates\r\n      coordinates = coordinates.filter((elem) => {\r\n        return elem.x !== 0 && elem.y !== 0;\r\n      });\r\n\r\n      resolve(coordinates);\r\n    });\r\n  });\r\n};\r\n\r\nexport { GetCountryStateData };\r\n","import React, { useEffect } from \"react\";\r\nimport \"ol/ol.css\";\r\nimport Map from \"ol/Map\";\r\nimport View from \"ol/View\";\r\nimport {\r\n  defaults as defaultInteractions,\r\n  DragRotateAndZoom,\r\n} from \"ol/interaction\";\r\nimport TileLayer from \"ol/layer/Tile\";\r\nimport OSM from \"ol/source/OSM\";\r\nimport GeoJSON from \"ol/format/GeoJSON\";\r\nimport VectorLayer from \"ol/layer/Vector\";\r\nimport VectorSource from \"ol/source/Vector\";\r\nimport { Stroke, Style, Circle, Fill } from \"ol/style\";\r\nimport Feature from \"ol/Feature\";\r\nimport Point from \"ol/geom/Point\";\r\nimport { fromLonLat } from \"ol/proj\";\r\nimport CountryGeoJson from \"../assets/countries.geojson\";\r\nimport { getVectorContext } from \"ol/render\";\r\nimport { easeOut } from \"ol/easing\";\r\nimport { unByKey } from \"ol/Observable\";\r\n\r\nimport {\r\n  styleForCountry,\r\n  styleForPoint,\r\n  styleForHighlight,\r\n  styleForDiseased,\r\n  initRadius,\r\n} from \"./styles\";\r\n\r\nimport { GetCountryStateData } from \"../data\";\r\n\r\n// This should be defined out of SetMap function. Otherwise every time component renders, it will create mapObj again and a new map will be created too.\r\n// So define it in here and handle null check before map creation.\r\nvar map = null;\r\nvar coordinates = [];\r\nvar countryLayerSource = new VectorSource({\r\n  url: CountryGeoJson,\r\n  format: new GeoJSON(),\r\n});\r\nvar countryLayer = new VectorLayer({\r\n  name: \"country\",\r\n  source: countryLayerSource,\r\n  style: function (feature) {\r\n    styleForCountry.getText().setText(feature.get(\"name\"));\r\n    return styleForCountry;\r\n  },\r\n});\r\nvar dataSource = new VectorSource({});\r\n\r\nvar dataLayer = new VectorLayer({\r\n  name: \"data\",\r\n  source: dataSource,\r\n  zIndex: 1, // this is important to reach out circles on country layer\r\n});\r\n\r\nvar tileLayer = new TileLayer({\r\n  source: new OSM(),\r\n});\r\n\r\nvar diseasedCountryLayerSource = new VectorSource({});\r\nvar diseasedCountryLayer = new VectorLayer({\r\n  name: \"diseased\",\r\n  source: diseasedCountryLayerSource,\r\n  style: function (feature) {\r\n    return styleForDiseased;\r\n  },\r\n});\r\n\r\nvar duration = 3000;\r\nfunction flash(feature) {\r\n  var start = new Date().getTime();\r\n  var listenerKey = tileLayer.on(\"postrender\", animate);\r\n\r\n  function animate(event) {\r\n    var vectorContext = getVectorContext(event);\r\n    var frameState = event.frameState;\r\n    var flashGeom = feature.getGeometry().clone();\r\n    var elapsed = frameState.time - start;\r\n    var elapsedRatio = elapsed / duration;\r\n    // radius will be 5 at start and 30 at end.\r\n    // var radius = easeOut(elapsedRatio) * 25 + 5;\r\n    var radius = easeOut(elapsedRatio) * 2 + 3;\r\n    var opacity = easeOut(1 - elapsedRatio);\r\n\r\n    var styleForFlash = new Style({\r\n      image: new Circle({\r\n        radius: radius,\r\n        stroke: new Stroke({\r\n          color: \"rgba(255, 0, 0, \" + opacity + \")\",\r\n          width: 0.25 + opacity,\r\n        }),\r\n      }),\r\n    });\r\n\r\n    vectorContext.setStyle(styleForFlash);\r\n    vectorContext.drawGeometry(flashGeom);\r\n    if (elapsed > duration) {\r\n      unByKey(listenerKey);\r\n      return;\r\n    }\r\n    // tell OpenLayers to continue postrender animation\r\n    map.render();\r\n  }\r\n}\r\n\r\ndataSource.on(\"addfeature\", function (e) {\r\n  flash(e.feature);\r\n});\r\n\r\nfunction SetMap() {\r\n  if (map === null) {\r\n    map = new Map({\r\n      target: \"map\",\r\n      layers: [tileLayer, countryLayer, diseasedCountryLayer, dataLayer],\r\n      view: new View({\r\n        center: [0, 0],\r\n        zoom: 0,\r\n        maxZoom: 6,\r\n      }),\r\n      interactions: defaultInteractions().extend([new DragRotateAndZoom()]),\r\n    });\r\n  }\r\n\r\n  var featureOverlayCountry = new VectorLayer({\r\n    source: new VectorSource(),\r\n    map: map,\r\n    style: function (feature) {\r\n      styleForHighlight.getText().setText(feature.get(\"name\"));\r\n      return styleForHighlight;\r\n    },\r\n    zIndex: 0,\r\n  });\r\n\r\n  var featureOverlayData = new VectorLayer({\r\n    source: new VectorSource(),\r\n    map: map,\r\n    style: function (feature) {\r\n      return styleForPoint;\r\n    },\r\n    zIndex: 1,\r\n  });\r\n\r\n  var highlightCountry;\r\n  var highlightData;\r\n  var displayFeatureInfo = function (pixel) {\r\n    var info = document.getElementById(\"info\");\r\n\r\n    map.forEachFeatureAtPixel(pixel, function (feature, layer) {\r\n      if (layer) {\r\n        // handle country layer and data layer seperately\r\n        switch (layer.get(\"name\")) {\r\n          case \"country\":\r\n            if (feature) {\r\n              info.innerHTML = feature.getId() + \": \" + feature.get(\"name\");\r\n            } else {\r\n              info.innerHTML = \"&nbsp;\";\r\n            }\r\n            if (feature !== highlightCountry) {\r\n              if (highlightCountry) {\r\n                featureOverlayCountry\r\n                  .getSource()\r\n                  .removeFeature(highlightCountry);\r\n              }\r\n              if (feature) {\r\n                featureOverlayCountry.getSource().addFeature(feature);\r\n              }\r\n              highlightCountry = feature;\r\n            }\r\n            break;\r\n          case \"data\":\r\n            if (feature !== highlightData) {\r\n              if (highlightData) {\r\n                featureOverlayData.getSource().removeFeature(highlightData);\r\n              }\r\n              if (feature) {\r\n                featureOverlayData.getSource().addFeature(feature);\r\n              }\r\n              highlightData = feature;\r\n            }\r\n            break;\r\n          default:\r\n            console.log(2);\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  map.on(\"pointermove\", function (evt) {\r\n    if (evt.dragging) {\r\n      return;\r\n    }\r\n    var pixel = map.getEventPixel(evt.originalEvent);\r\n    displayFeatureInfo(pixel);\r\n  });\r\n\r\n  map.on(\"click\", function (evt) {\r\n    displayFeatureInfo(evt.pixel);\r\n  });\r\n\r\n  map.getView().on(\"change:resolution\", function (evt) {\r\n    let zoom = map.getView().getZoom();\r\n    let newRadius = Math.pow(Math.abs(zoom - 2), 2) + initRadius;\r\n\r\n    // Update only radius of point/circle features\r\n    styleForPoint.getImage().setRadius(newRadius);\r\n\r\n    dataLayer.getSource().forEachFeature(function (feature) {\r\n      feature.setStyle(styleForPoint);\r\n    });\r\n  });\r\n}\r\n\r\nfunction SetDiseasedCountries() {\r\n  // Change color of diseased countries\r\n  // TODO\r\n  // countryLayerSource.forEachFeature((feature) => {\r\n  //   console.log(1);\r\n  // });\r\n}\r\n\r\nfunction AddCoordinateFeatures(elem) {\r\n  // var geom = new Point(fromLonLat([coordinates[index].x, locations[index].y]));\r\n  var geom = new Point(fromLonLat([elem.x, elem.y]));\r\n  var feature = new Feature(geom);\r\n  feature.setStyle(styleForPoint);\r\n  dataSource.addFeature(feature);\r\n}\r\n\r\nfunction MapObject() {\r\n  // to run function only once give [] as second parameter\r\n\r\n  async function FetchData() {\r\n    // Wait for response\r\n    await GetCountryStateData()\r\n      .then((res) => {\r\n        coordinates = res;\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n\r\n    // now coordinates are ready - set map data\r\n    SetMap();\r\n    SetDiseasedCountries();\r\n    coordinates.forEach((elem) => {\r\n      AddCoordinateFeatures(elem);\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    FetchData();\r\n  }, []);\r\n\r\n  return <div id=\"map\" className=\"h-100\"></div>;\r\n}\r\n\r\nexport default MapObject;\r\n","import React, { useEffect } from \"react\";\r\nimport Chart from \"chart.js\";\r\nimport { GetCountryStateData } from \"../data\";\r\n\r\nvar ctx = null;\r\n\r\nasync function FetchData() {\r\n  // Wait for response\r\n  await GetCountryStateData()\r\n    .then((res) => {\r\n      // make tihs search according to selection on map later!\r\n      // TODO\r\n      let active = res.find((elem) => {\r\n        return elem.countryName === \"Turkey\";\r\n      });\r\n\r\n      // find out month names\r\n      let labels = [];\r\n      let data = [];\r\n      let monthsReference = [\r\n        \"January\",\r\n        \"February\",\r\n        \"March\",\r\n        \"April\",\r\n        \"May\",\r\n        \"June\",\r\n        \"July\",\r\n        \"August\",\r\n        \"September\",\r\n        \"October\",\r\n        \"November\",\r\n        \"December\",\r\n      ];\r\n      active.detailedCase.forEach((elem) => {\r\n        if (elem.month < monthsReference.length) {\r\n          labels.push(monthsReference[elem.month]);\r\n          data.push(elem.count);\r\n        }\r\n      });\r\n\r\n      ctx = document.getElementById(\"myChart\").getContext(\"2d\");\r\n      var chart = new Chart(ctx, {\r\n        // The type of chart we want to create\r\n        type: \"line\",\r\n\r\n        // The data for our dataset\r\n        data: {\r\n          labels: labels,\r\n          datasets: [\r\n            {\r\n              label: active.countryName,\r\n              backgroundColor: \"rgb(255, 99, 132)\",\r\n              borderColor: \"rgb(255, 99, 132)\",\r\n              data: data,\r\n            },\r\n          ],\r\n        },\r\n\r\n        // Configuration options go here\r\n        options: {\r\n          responsive: true,\r\n          maintainAspectRatio: false,\r\n        },\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n}\r\n\r\nfunction ChartCanvas() {\r\n  useEffect(() => {\r\n    FetchData();\r\n  }, []);\r\n  return <canvas id=\"myChart\"></canvas>;\r\n}\r\n\r\nexport default ChartCanvas;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n// get exported javascript functions\r\nimport { getTotalRepoCount, getRepoCounts } from \"../githubData\";\r\nimport { useCookies } from \"react-cookie\";\r\n\r\n// 5 miniutes\r\nconst cookieExpire = 300;\r\n\r\nconst initialValueCountByMonth = [\r\n  { id: 0, value: 0 },\r\n  { id: 1, value: 0 },\r\n  { id: 2, value: 0 },\r\n  { id: 3, value: 0 },\r\n];\r\nconst months = [\"January\", \"February\", \"March\", \"April\"];\r\n\r\nfunction Github() {\r\n  const [cookies, setCookie, removeCookie] = useCookies([\r\n    \"totalRepoCount\",\r\n    \"monthlyRepoCount\",\r\n  ]);\r\n\r\n  const [totalRepo, setTotalRepo] = useState(0);\r\n  const [countByMonths, setCountByMonths] = useState(initialValueCountByMonth);\r\n  useEffect(() => {\r\n    if (cookies.totalRepoCount) {\r\n      // use cookie to prevent api request frequently\r\n      setTotalRepo(cookies.totalRepoCount);\r\n    } else {\r\n      // api requests\r\n      getTotalRepoCount().then((response) => {\r\n        setTotalRepo(response);\r\n\r\n        // store it in cookie\r\n        // set cookie with expire seconds - maxAge\r\n        setCookie(\"totalRepoCount\", JSON.stringify(response), {\r\n          path: \"/\",\r\n          maxAge: cookieExpire,\r\n        });\r\n      });\r\n    }\r\n\r\n    if (cookies.monthlyRepoCount) {\r\n      if (!cookies.monthlyRepoCount.monthlyData) {\r\n        //something is wrong with the cookie. Delete it\r\n        removeCookie(\"monthlyRepoCount\");\r\n      } else {\r\n        setCountByMonths(cookies.monthlyRepoCount.monthlyData);\r\n      }\r\n    } else {\r\n      getRepoCounts()\r\n        .then(\r\n          axios.spread((...res) => {\r\n            var [...temp] = [...res];\r\n            const fetchedCountByMonth = temp.map((val, index) => {\r\n              return { id: index, value: val.data.total_count };\r\n            });\r\n            setCountByMonths(fetchedCountByMonth);\r\n\r\n            // store it in cookie\r\n            let cookieObject = {\r\n              monthlyData: fetchedCountByMonth,\r\n            };\r\n            // set cookie with expire seconds - maxAge\r\n            setCookie(\"monthlyRepoCount\", JSON.stringify(cookieObject), {\r\n              path: \"/\",\r\n              maxAge: cookieExpire,\r\n            });\r\n          })\r\n        )\r\n        .catch((err) => {\r\n          console.log(\"error on getRepoCounts(): \" + err);\r\n        });\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"bg-dark overflow-auto\" style={{ height: \"200px\" }}>\r\n      <table className=\"table table-dark table-hover\">\r\n        <tbody>\r\n          <tr>\r\n            <td>Total number of COVID related repositories on Github</td>\r\n            <td>{totalRepo}</td>\r\n          </tr>\r\n          {countByMonths &&\r\n            countByMonths.map((countByMonth, index) => (\r\n              <tr key={index}>\r\n                <td>Repo Counts on {months[index]}</td>\r\n                <td>{countByMonth.value}</td>\r\n                {/* <div key={countByMonth.id}> */}\r\n              </tr>\r\n            ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Github;\r\n","import axios from \"axios\";\r\n\r\nexport const getTotalRepoCount = () => {\r\n  return axios\r\n    .get(\r\n      \"https://api.github.com/search/repositories?q=covid OR coronavirus in:name,description+created:>2020-01-01\"\r\n    )\r\n    .then((res) => {\r\n      return res.data.total_count;\r\n    })\r\n    .catch((err) => {\r\n      return 0;\r\n    });\r\n};\r\n\r\nexport const getRepoCounts = () => {\r\n  const urls = [\r\n    \"https://api.github.com/search/repositories?q=covid OR coronavirus in:name,description+created:2020-01-01..2020-01-31\",\r\n    \"https://api.github.com/search/repositories?q=covid OR coronavirus in:name,description+created:2020-02-01..2020-02-29\",\r\n    \"https://api.github.com/search/repositories?q=covid OR coronavirus in:name,description+created:2020-03-01..2020-03-31\",\r\n    \"https://api.github.com/search/repositories?q=covid OR coronavirus in:name,description+created:2020-04-01..*\",\r\n  ];\r\n\r\n  const requests = [\r\n    axios.get(urls[0]),\r\n    axios.get(urls[1]),\r\n    axios.get(urls[2]),\r\n    axios.get(urls[3]),\r\n  ];\r\n\r\n  return axios\r\n    .all([requests[0], requests[1], requests[2], requests[3]])\r\n    .then(\r\n      axios.spread((...responses) => {\r\n        return responses;\r\n        // const res1 = responses[0];\r\n      })\r\n    )\r\n    .catch((err) => {\r\n      return 0;\r\n    });\r\n};\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"currentColor\",\n  d: \"M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2 2.3zm44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z\"\n});\n\nvar SvgGithubBrands = function SvgGithubBrands(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    focusable: \"false\",\n    \"data-prefix\": \"fab\",\n    \"data-icon\": \"github\",\n    className: \"svg-inline--fa fa-github fa-w-16\",\n    role: \"img\",\n    viewBox: \"0 0 496 512\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgGithubBrands, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/github-brands.ec5bc1b3.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\nimport \"./App.scss\";\n// get map component\nimport Map from \"./Components/Map\";\n// get chart component\nimport ChartCanvas from \"./Components/Chart\";\n// get github component\nimport Github from \"./Components/Github\";\n// import github icon\nimport { ReactComponent as GithubLogo } from \"./assets/github-brands.svg\";\n\nfunction App() {\n  return (\n    <div className=\"content\">\n      <div className=\"col-xl-8 col-lg-10 col-md-12 col-sm-12 h-100\">\n        <div className=\"d-flex flex-column w-100 h-100\">\n          <div className=\"header-content d-flex justify-content-center\">\n            <div className=\"title mb-2\">COVID Disease Tracker by Country</div>\n          </div>\n          <div className=\"d-flex\">\n            <div className=\"ml-auto\" id=\"info\"></div>\n          </div>\n          <div className=\"w-100 h-50 mb-1\">\n            <Map></Map>\n          </div>\n          <div className=\"h-50\">\n            <div className=\"w-100 h-75 bg-light mb-1\">\n              <ChartCanvas></ChartCanvas>\n            </div>\n            <Github></Github>\n          </div>\n          <div className=\"d-flex flex-column\">\n            <div id=\"location\">Location: </div>\n            <div className=\"logo text-center h2 pb-3\">\n              <a\n                className=\"h-100\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href=\"https://github.com/Ardahan-Kisbet/COVID-19\"\n              >\n                <GithubLogo className=\"svg h-100\"></GithubLogo>\n              </a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import axios from \"axios\";\r\n\r\naxios.get(\"https://ipapi.co/json/\").then((res) => {\r\n  document.getElementById(\"location\").append(res.data.country_name);\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./main.js\";\nimport \"./data.js\";\nimport { CookiesProvider } from \"react-cookie\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <CookiesProvider>\n      <App />\n    </CookiesProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}